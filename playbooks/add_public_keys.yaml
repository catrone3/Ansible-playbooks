---
- hosts: all

  become: yes
  tasks:

  # Create Ansible User
  # --
  #
  - name: Ensure group "ansible" exits
    group:
      name: ansible
      state: present

  - name: create ansible user
    user:
      name: "{{ lookup('env','USER') }}"
      groups: sudo, adm, ansible

  # Installs public key
  # --
  #
  - name: install public keys
    ansible.posix.authorized_key:
      user: "{{ lookup('env','USER') }}"
      state: present
      key: "{{ lookup('file', '../files/id_rsa.pub') }}"

  - name: install public keys
    ansible.posix.authorized_key:
      user: "{{ lookup('env','ADMIN') }}"
      state: present
      key: "{{ lookup('file', '../files/id_rsa.pub') }}"

  # (Optional)
  # Set all sudoers to no password
  # --
  - name: change sudoers file
    lineinfile:
      path: /etc/sudoers
      state: present
      insertafter: '^%sudo'
      line: '%ansible ALL=(ALL) NOPASSWD: ALL'
      validate: /usr/sbin/visudo -cf %s

  # Disable password login for ansible user
  # --
  #
  - name: adjust ssh config
    lineinfile:
      path: "/home/{{ lookup('env','USER') }}/.ssh/sshd_config"
      state: present
      create: yes
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
      validate: /usr/sbin/visudo -cf %s
    loop:
      - {regexp: 'PasswordAuthentication no', line: 'PasswordAuthentication no' }
      - {regexp: "Match User {{ lookup('env','ADMIN') }}", line: "Match User {{ lookup('env','ADMIN') }}" }
      - {regexp: 'PasswordAuthentication yes', line: 'PasswordAuthentication yes' }